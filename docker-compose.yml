version: "3.7"

services:
  # react:
  #   container_name: react
  #   build:
  #     context: ./front
  #     dockerfile: Dockerfile
  #   volumes:
  #     - "./front/react/src:/app/src"
  #   ports:
  #     - 3001:3000
  #   environment:
  #     - CHOKIDAR_USEPOLLING=true
  #   networks:
  #     - transcendence

  nest:
    container_name: nest
    build:
      context: ./back
      dockerfile: Dockerfile
    depends_on:
      - db
    volumes:
      - "./back/nest/src:/nest/src"
      - "./back/nest/prisma:/nest/prisma"
      - "./back/nest/test:/nest/test"
    ports:
      - 3333:3333
    networks:
      - transcendence

  db:
    container_name: db
    image: postgres:14.2
    volumes:
      - "database:/var/lib/postgresql/data"
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    restart: always
    networks:
      - transcendence

  test-db:
    container_name: test-db
    image: postgres:14.2
    volumes:
      - "testdb:/var/lib/postgresql/data"
    ports:
      - 5433:5433
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    restart: always
    networks:
      - transcendence
    command: -p 5433

  # pgadmin:
  #   container_name: pgAdmin
  #   build:
  #     context: ./pgadmin
  #     dockerfile: Dockerfile
  #   ports:
  #     - 5050:80
  #   environment:
  #     - PGADMIN_DEFAULT_EMAIL=admin@admin.com
  #     - PGADMIN_DEFAULT_PASSWORD=admin

volumes:
  database:
    driver: local
  testdb:
    driver: local

networks:
  transcendence:
