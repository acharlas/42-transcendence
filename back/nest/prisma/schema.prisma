// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  email String @unique
  hash  String

  username String?
  nickname String?
  wins     Int     @default(0)
  losses   Int     @default(0)

  Channels ChannelUser[]
  myfriend User[]   @relation("friends")
  arefriend  User[]  @relation("friends")
  
  myblock User[]   @relation("blocks")
  areblock  User[]  @relation("blocks")

  msg Msg[] @relation("UserMsg")

  @@map("users")
}

model ChannelUser {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  privilege UserPrivilege @default(DEFAULT)

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  channelId String
  channel Channel @relation(fields: [channelId], references: [id], onDelete: Cascade)

  @@map("channelusers")
}

model Channel {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name String
  type ChannelType @default(PUBLIC)

  users ChannelUser[]
  msg Msg[]

  @@map("channels")
}

model Msg {

  content String

  
  users User @relation(name: "UserMsg", fields: [userId], references: [id], onDelete: Cascade)
  userId String 
  channelId String
  channel Channel @relation(fields: [channelId], references: [id], onDelete: Cascade)
  @@map("msgs")
  @@id([userId, channelId])
}

enum UserPrivilege {
  OWNER
  ADMIN
  DEFAULT
  MUTED
  BAN
}

enum ChannelType {
  PUBLIC
  PRIVATE
  PROTECTED
  DM
}
